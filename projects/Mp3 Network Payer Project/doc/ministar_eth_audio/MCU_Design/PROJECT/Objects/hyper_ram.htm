<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\hyper_ram.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\hyper_ram.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon May 03 00:43:44 2021
<BR><P>
<H3>Maximum Stack Usage =         64 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; VS_Set_All &rArr; VS_Set_Bass &rArr; VS_WR_Cmd &rArr; VS_SPI_WriteByte
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">PORT0_COMB_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">PORT0_COMB_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">BusFault_Handler</a> from gw1ns4c_it.o(i.BusFault_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from gw1ns4c_it.o(i.DebugMon_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from gw1ns4c_it.o(i.HardFault_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[14]">I2C_Handler</a> from gw1ns4c_it.o(i.I2C_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from gw1ns4c_it.o(i.MemManage_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from gw1ns4c_it.o(i.NMI_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[19]">PORT0_0_Handler</a> from gw1ns4c_it.o(i.PORT0_0_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[23]">PORT0_10_Handler</a> from gw1ns4c_it.o(i.PORT0_10_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[24]">PORT0_11_Handler</a> from gw1ns4c_it.o(i.PORT0_11_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[25]">PORT0_12_Handler</a> from gw1ns4c_it.o(i.PORT0_12_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[26]">PORT0_13_Handler</a> from gw1ns4c_it.o(i.PORT0_13_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[27]">PORT0_14_Handler</a> from gw1ns4c_it.o(i.PORT0_14_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[28]">PORT0_15_Handler</a> from gw1ns4c_it.o(i.PORT0_15_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[1a]">PORT0_1_Handler</a> from gw1ns4c_it.o(i.PORT0_1_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[1b]">PORT0_2_Handler</a> from gw1ns4c_it.o(i.PORT0_2_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[1c]">PORT0_3_Handler</a> from gw1ns4c_it.o(i.PORT0_3_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[1d]">PORT0_4_Handler</a> from gw1ns4c_it.o(i.PORT0_4_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[1e]">PORT0_5_Handler</a> from gw1ns4c_it.o(i.PORT0_5_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[1f]">PORT0_6_Handler</a> from gw1ns4c_it.o(i.PORT0_6_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[20]">PORT0_7_Handler</a> from gw1ns4c_it.o(i.PORT0_7_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[21]">PORT0_8_Handler</a> from gw1ns4c_it.o(i.PORT0_8_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[22]">PORT0_9_Handler</a> from gw1ns4c_it.o(i.PORT0_9_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[10]">PORT0_COMB_Handler</a> from startup_gw1ns4c.o(.text) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from gw1ns4c_it.o(i.PendSV_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[f]">RTC_Handler</a> from gw1ns4c_it.o(i.RTC_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gw1ns4c.o(.text) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from gw1ns4c_it.o(i.SVC_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[18]">Spare15_Handler</a> from startup_gw1ns4c.o(.text) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from gw1ns4c_it.o(i.SysTick_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[2a]">SystemInit</a> from system_gw1ns4c.o(i.SystemInit) referenced from startup_gw1ns4c.o(.text)
 <LI><a href="#[12]">TIMER0_Handler</a> from gw1ns4c_it.o(i.TIMER0_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[13]">TIMER1_Handler</a> from gw1ns4c_it.o(i.TIMER1_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[a]">UART0_Handler</a> from gw1ns4c_it.o(i.UART0_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[c]">UART1_Handler</a> from gw1ns4c_it.o(i.UART1_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[15]">UARTOVF_Handler</a> from startup_gw1ns4c.o(.text) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[b]">USER_INT0_Handler</a> from gw1ns4c_it.o(i.USER_INT0_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[d]">USER_INT1_Handler</a> from gw1ns4c_it.o(i.USER_INT1_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[e]">USER_INT2_Handler</a> from gw1ns4c_it.o(i.USER_INT2_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[11]">USER_INT3_Handler</a> from gw1ns4c_it.o(i.USER_INT3_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[16]">USER_INT4_Handler</a> from gw1ns4c_it.o(i.USER_INT4_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[17]">USER_INT5_Handler</a> from gw1ns4c_it.o(i.USER_INT5_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from gw1ns4c_it.o(i.UsageFault_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[2b]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gw1ns4c.o(.text)
 <LI><a href="#[2c]">fputc</a> from retarget.o(i.fputc) referenced from printf1.o(i.__0printf$1)
 <LI><a href="#[29]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(.text)
</UL>
<P><STRONG><a name="[57]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[58]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[59]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[5a]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[5b]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[5c]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gw1ns4c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PORT0_COMB_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gw1ns4c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT0_COMB_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT0_COMB_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>Spare15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gw1ns4c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UARTOVF_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gw1ns4c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[5e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>FPGA_Check_Init_Status</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ahb2_tofpga.o(i.FPGA_Check_Init_Status))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>GPIO0_Init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, main.o(i.GPIO0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIO0_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>GPIO_Init</STRONG> (Thumb, 196 bytes, Stack size 20 bytes, gw1ns4c_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_Init
</UL>

<P><STRONG><a name="[3b]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_WR_Cmd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_RD_Reg
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Sine_Test
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Send_MusicData
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Ram_Test
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_HD_Reset
</UL>

<P><STRONG><a name="[39]"></a>GPIO_ResetBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gw1ns4c_gpio.o(i.GPIO_ResetBit))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Sine_Test
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Send_MusicData
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Ram_Test
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_HD_Reset
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[32]"></a>GPIO_SetBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gw1ns4c_gpio.o(i.GPIO_SetBit))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_WR_Cmd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_RD_Reg
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Sine_Test
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Send_MusicData
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Ram_Test
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_HD_Reset
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_Init
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.I2C_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>PORT0_0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>PORT0_10_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_10_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PORT0_11_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_11_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PORT0_12_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_12_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>PORT0_13_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_13_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>PORT0_14_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_14_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>PORT0_15_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_15_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>PORT0_1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PORT0_2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_2_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PORT0_3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_3_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>PORT0_4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_4_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PORT0_5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_5_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>PORT0_6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_6_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>PORT0_7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_7_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>PORT0_8_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_8_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PORT0_9_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_9_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RTC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.RTC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>SPI1_Init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, spi_master.o(i.SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI1_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Select_Slave
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Init
</UL>

<P><STRONG><a name="[44]"></a>SPI_GetRoeStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gw1ns4c_spi.o(i.SPI_GetRoeStatus))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_ReadByte
</UL>

<P><STRONG><a name="[45]"></a>SPI_GetRrdyStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gw1ns4c_spi.o(i.SPI_GetRrdyStatus))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_ReadByte
</UL>

<P><STRONG><a name="[48]"></a>SPI_GetToeStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gw1ns4c_spi.o(i.SPI_GetToeStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_WriteByte
</UL>

<P><STRONG><a name="[49]"></a>SPI_GetTrdyStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gw1ns4c_spi.o(i.SPI_GetTrdyStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_WriteByte
</UL>

<P><STRONG><a name="[34]"></a>SPI_Init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gw1ns4c_spi.o(i.SPI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
</UL>

<P><STRONG><a name="[46]"></a>SPI_ReadData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gw1ns4c_spi.o(i.SPI_ReadData))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_ReadByte
</UL>

<P><STRONG><a name="[35]"></a>SPI_Select_Slave</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gw1ns4c_spi.o(i.SPI_Select_Slave))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
</UL>

<P><STRONG><a name="[47]"></a>SPI_SetClkSel</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gw1ns4c_spi.o(i.SPI_SetClkSel))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_SpeedLow
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_SpeedHigh
</UL>

<P><STRONG><a name="[4a]"></a>SPI_WriteData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gw1ns4c_spi.o(i.SPI_WriteData))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_WriteByte
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SystemInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, system_gw1ns4c.o(i.SystemInit))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(.text)
</UL>
<P><STRONG><a name="[12]"></a>TIMER0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.TIMER0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIMER1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.TIMER1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>UART0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.UART0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>UART1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.UART1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>UART_Init</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, gw1ns4c_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_Init
</UL>

<P><STRONG><a name="[54]"></a>UART_SendChar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gw1ns4c_uart.o(i.UART_SendChar))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[b]"></a>USER_INT0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.USER_INT0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>USER_INT1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.USER_INT1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>USER_INT2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.USER_INT2_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>USER_INT3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.USER_INT3_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>USER_INT4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.USER_INT4_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>USER_INT5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.USER_INT5_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>Uart0_Init</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, main.o(i.Uart0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Uart0_Init &rArr; UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>VS_HD_Reset</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, vs10xx.o(i.VS_HD_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = VS_HD_Reset &rArr; delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Sine_Test
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Ram_Test
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3c]"></a>VS_Init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, vs10xx.o(i.VS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = VS_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>VS_RD_Reg</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, vs10xx.o(i.VS_RD_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = VS_RD_Reg &rArr; VS_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_WriteByte
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_SpeedLow
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_ReadByte
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_SpeedHigh
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Set_Effect
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Ram_Test
</UL>

<P><STRONG><a name="[42]"></a>VS_Ram_Test</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, vs10xx.o(i.VS_Ram_Test))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = VS_Ram_Test &rArr; VS_WR_Cmd &rArr; VS_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_WR_Cmd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_WriteByte
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_SpeedLow
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_RD_Reg
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_HD_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>VS_SPI_ReadByte</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, vs10xx.o(i.VS_SPI_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VS_SPI_ReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReadData
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetRrdyStatus
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetRoeStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_RD_Reg
</UL>

<P><STRONG><a name="[41]"></a>VS_SPI_SpeedHigh</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, vs10xx.o(i.VS_SPI_SpeedHigh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VS_SPI_SpeedHigh
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetClkSel
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_WR_Cmd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_RD_Reg
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>VS_SPI_SpeedLow</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, vs10xx.o(i.VS_SPI_SpeedLow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VS_SPI_SpeedLow
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SetClkSel
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_WR_Cmd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_RD_Reg
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Sine_Test
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Ram_Test
</UL>

<P><STRONG><a name="[3f]"></a>VS_SPI_WriteByte</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, vs10xx.o(i.VS_SPI_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = VS_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteData
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetTrdyStatus
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_GetToeStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_WR_Cmd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_RD_Reg
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Sine_Test
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Send_MusicData
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Ram_Test
</UL>

<P><STRONG><a name="[4b]"></a>VS_Send_MusicData</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, vs10xx.o(i.VS_Send_MusicData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = VS_Send_MusicData &rArr; VS_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>VS_Set_All</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, vs10xx.o(i.VS_Set_All))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = VS_Set_All &rArr; VS_Set_Bass &rArr; VS_WR_Cmd &rArr; VS_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Set_Vol
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Set_Effect
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Set_Bass
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>VS_Set_Bass</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, vs10xx.o(i.VS_Set_Bass))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = VS_Set_Bass &rArr; VS_WR_Cmd &rArr; VS_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_WR_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Set_All
</UL>

<P><STRONG><a name="[4f]"></a>VS_Set_Effect</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, vs10xx.o(i.VS_Set_Effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = VS_Set_Effect &rArr; VS_WR_Cmd &rArr; VS_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_WR_Cmd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_RD_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Set_All
</UL>

<P><STRONG><a name="[4d]"></a>VS_Set_Vol</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, vs10xx.o(i.VS_Set_Vol))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = VS_Set_Vol &rArr; VS_WR_Cmd &rArr; VS_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_WR_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Set_All
</UL>

<P><STRONG><a name="[50]"></a>VS_Sine_Test</STRONG> (Thumb, 344 bytes, Stack size 8 bytes, vs10xx.o(i.VS_Sine_Test))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = VS_Sine_Test &rArr; VS_WR_Cmd &rArr; VS_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_WR_Cmd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_WriteByte
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_SpeedLow
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_HD_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>VS_WR_Cmd</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, vs10xx.o(i.VS_WR_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = VS_WR_Cmd &rArr; VS_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_WriteByte
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_SpeedLow
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_SpeedHigh
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Set_Vol
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Set_Effect
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Set_Bass
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Sine_Test
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Ram_Test
</UL>

<P><STRONG><a name="[51]"></a>__0printf$1</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5f]"></a>__1printf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)

<P><STRONG><a name="[55]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[61]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[62]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[3a]"></a>delay_ms</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, delay.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Sine_Test
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Ram_Test
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_HD_Reset
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c]"></a>fputc</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, retarget.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0printf$1)
</UL>
<P><STRONG><a name="[29]"></a>main</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = main &rArr; VS_Set_All &rArr; VS_Set_Bass &rArr; VS_WR_Cmd &rArr; VS_SPI_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBit
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Sine_Test
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Set_All
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Send_MusicData
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_SPI_SpeedHigh
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Ram_Test
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VS_HD_Reset
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPGA_Check_Init_Status
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_Init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[52]"></a>_printf_core</STRONG> (Thumb, 336 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$1
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
