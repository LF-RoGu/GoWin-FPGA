<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\new_gowin_proj.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\new_gowin_proj.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sat May 15 23:01:57 2021
<BR><P>
<H3>Maximum Stack Usage =        216 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; __0scanf &rArr; __vfscanf_char_file &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">PORT0_COMB_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">PORT0_COMB_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">BusFault_Handler</a> from gw1ns4c_it.o(i.BusFault_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from gw1ns4c_it.o(i.DebugMon_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from gw1ns4c_it.o(i.HardFault_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[14]">I2C_Handler</a> from gw1ns4c_it.o(i.I2C_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from gw1ns4c_it.o(i.MemManage_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from gw1ns4c_it.o(i.NMI_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[19]">PORT0_0_Handler</a> from gw1ns4c_it.o(i.PORT0_0_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[23]">PORT0_10_Handler</a> from gw1ns4c_it.o(i.PORT0_10_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[24]">PORT0_11_Handler</a> from gw1ns4c_it.o(i.PORT0_11_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[25]">PORT0_12_Handler</a> from gw1ns4c_it.o(i.PORT0_12_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[26]">PORT0_13_Handler</a> from gw1ns4c_it.o(i.PORT0_13_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[27]">PORT0_14_Handler</a> from gw1ns4c_it.o(i.PORT0_14_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[28]">PORT0_15_Handler</a> from gw1ns4c_it.o(i.PORT0_15_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[1a]">PORT0_1_Handler</a> from gw1ns4c_it.o(i.PORT0_1_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[1b]">PORT0_2_Handler</a> from gw1ns4c_it.o(i.PORT0_2_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[1c]">PORT0_3_Handler</a> from gw1ns4c_it.o(i.PORT0_3_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[1d]">PORT0_4_Handler</a> from gw1ns4c_it.o(i.PORT0_4_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[1e]">PORT0_5_Handler</a> from gw1ns4c_it.o(i.PORT0_5_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[1f]">PORT0_6_Handler</a> from gw1ns4c_it.o(i.PORT0_6_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[20]">PORT0_7_Handler</a> from gw1ns4c_it.o(i.PORT0_7_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[21]">PORT0_8_Handler</a> from gw1ns4c_it.o(i.PORT0_8_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[22]">PORT0_9_Handler</a> from gw1ns4c_it.o(i.PORT0_9_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[10]">PORT0_COMB_Handler</a> from startup_gw1ns4c.o(.text) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from gw1ns4c_it.o(i.PendSV_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[f]">RTC_Handler</a> from gw1ns4c_it.o(i.RTC_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[32]">Reset_Handler</a> from startup_gw1ns4c.o(.text) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from gw1ns4c_it.o(i.SVC_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[18]">Spare15_Handler</a> from startup_gw1ns4c.o(.text) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from gw1ns4c_it.o(i.SysTick_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[2a]">SystemInit</a> from system_gw1ns4c.o(i.SystemInit) referenced from startup_gw1ns4c.o(.text)
 <LI><a href="#[12]">TIMER0_Handler</a> from gw1ns4c_it.o(i.TIMER0_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[13]">TIMER1_Handler</a> from gw1ns4c_it.o(i.TIMER1_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[a]">UART0_Handler</a> from gw1ns4c_it.o(i.UART0_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[c]">UART1_Handler</a> from gw1ns4c_it.o(i.UART1_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[15]">UARTOVF_Handler</a> from startup_gw1ns4c.o(.text) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[b]">USER_INT0_Handler</a> from gw1ns4c_it.o(i.USER_INT0_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[d]">USER_INT1_Handler</a> from gw1ns4c_it.o(i.USER_INT1_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[e]">USER_INT2_Handler</a> from gw1ns4c_it.o(i.USER_INT2_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[11]">USER_INT3_Handler</a> from gw1ns4c_it.o(i.USER_INT3_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[16]">USER_INT4_Handler</a> from gw1ns4c_it.o(i.USER_INT4_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[17]">USER_INT5_Handler</a> from gw1ns4c_it.o(i.USER_INT5_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from gw1ns4c_it.o(i.UsageFault_Handler) referenced from startup_gw1ns4c.o(RESET)
 <LI><a href="#[2d]">__backspace</a> from fgetc_b.o(.text) referenced from scanf_char_file.o(.text)
 <LI><a href="#[2b]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gw1ns4c.o(.text)
 <LI><a href="#[2e]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[31]">_sputc</a> from printf6.o(i._sputc) referenced from printf6.o(i.__0sprintf$6)
 <LI><a href="#[2c]">fgetc</a> from retarget.o(i.fgetc) referenced from scanf_char_file.o(.text)
 <LI><a href="#[30]">fputc</a> from retarget.o(i.fputc) referenced from printf6.o(i.__0printf$6)
 <LI><a href="#[2f]">isspace</a> from isspace_c.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[29]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(.text)
</UL>
<P><STRONG><a name="[67]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[33]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[68]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[69]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[6a]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[6b]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[6c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[6d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[32]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gw1ns4c.o(.text))

<P><STRONG><a name="[10]"></a>PORT0_COMB_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gw1ns4c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT0_COMB_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT0_COMB_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>Spare15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gw1ns4c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UARTOVF_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gw1ns4c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>__0scanf</STRONG> (Thumb, 26 bytes, Stack size 56 bytes, __0scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __0scanf &rArr; __vfscanf_char_file &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[4e]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawLineAngle
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawLineAngle
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawLineAngle
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[38]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[36]"></a>__vfscanf_char_file</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf_char_file &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0scanf
</UL>

<P><STRONG><a name="[6f]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[34]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[71]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>_fgetc$bs</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, fgetc_b.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__backspace</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fgetc_b.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char_file.o(.text)
</UL>
<P><STRONG><a name="[3b]"></a>__vfscanf_char</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char_file
</UL>

<P><STRONG><a name="[73]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, semi.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>isspace</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, isspace_c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ctype_lookup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>__vfscanf</STRONG> (Thumb, 810 bytes, Stack size 88 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[74]"></a>__I$use$semihosting$fgetc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusesemig.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__ctype_lookup</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ctype_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>Clear_RTC_interrupt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gw1ns4c_rtc.o(i.Clear_RTC_interrupt))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_RealTime
</UL>

<P><STRONG><a name="[3f]"></a>Count_RealTime</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, gw1ns4c_rtc.o(i.Count_RealTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Count_RealTime
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Load_Value
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_RTC_interrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Handler
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>Draw_Clock</STRONG> (Thumb, 316 bytes, Stack size 32 bytes, main.o(i.Draw_Clock))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Draw_Clock &rArr; OLED_DrawCircle &rArr; OLED_DrawCirclePoint &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteFrame
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawString
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawLineAngle
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawLine
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>I2C_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gw1ns4c_i2c.o(i.I2C_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[14]"></a>I2C_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.I2C_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>I2C_Init</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gw1ns4c_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_Init &rArr; I2C_Rate_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Rate_Set
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[4c]"></a>I2C_Rate_Set</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gw1ns4c_i2c.o(i.I2C_Rate_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Rate_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[59]"></a>I2C_SendByte</STRONG> (Thumb, 124 bytes, Stack size 12 bytes, gw1ns4c_i2c.o(i.I2C_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Data
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Command
</UL>

<P><STRONG><a name="[56]"></a>I2C_SendData</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, gw1ns4c_i2c.o(i.I2C_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Data
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, gw1ns4c_misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[66]"></a>OLED_ClearGRAM</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, oled.o(i.OLED_ClearGRAM))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>OLED_DrawChar</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, oled.o(i.OLED_DrawChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OLED_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawString
</UL>

<P><STRONG><a name="[45]"></a>OLED_DrawCircle</STRONG> (Thumb, 250 bytes, Stack size 36 bytes, oled.o(i.OLED_DrawCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = OLED_DrawCircle &rArr; OLED_DrawCirclePoint &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawCirclePoint
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Clock
</UL>

<P><STRONG><a name="[4d]"></a>OLED_DrawCirclePoint</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, oled.o(i.OLED_DrawCirclePoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OLED_DrawCirclePoint &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawCircle
</UL>

<P><STRONG><a name="[44]"></a>OLED_DrawLine</STRONG> (Thumb, 194 bytes, Stack size 52 bytes, oled.o(i.OLED_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = OLED_DrawLine &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Clock
</UL>

<P><STRONG><a name="[46]"></a>OLED_DrawLineAngle</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, oled.o(i.OLED_DrawLineAngle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OLED_DrawLineAngle &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Clock
</UL>

<P><STRONG><a name="[43]"></a>OLED_DrawPoint</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, oled.o(i.OLED_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OLED_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawCirclePoint
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawLineAngle
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawLine
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Clock
</UL>

<P><STRONG><a name="[47]"></a>OLED_DrawString</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, oled.o(i.OLED_DrawString))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OLED_DrawString &rArr; OLED_DrawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Clock
</UL>

<P><STRONG><a name="[51]"></a>OLED_Init</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, oled.o(i.OLED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OLED_Init &rArr; OLED_WR_Byte &rArr; Write_IIC_Data &rArr; I2C_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>OLED_WR_Byte</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, oled.o(i.OLED_WR_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = OLED_WR_Byte &rArr; Write_IIC_Data &rArr; I2C_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Data
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_IIC_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteFrame
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[55]"></a>OLED_WR_Data</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, oled.o(i.OLED_WR_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OLED_WR_Data &rArr; I2C_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteFrame
</UL>

<P><STRONG><a name="[49]"></a>OLED_WriteFrame</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, oled.o(i.OLED_WriteFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OLED_WriteFrame &rArr; OLED_WR_Byte &rArr; Write_IIC_Data &rArr; I2C_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Data
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Clock
</UL>

<P><STRONG><a name="[19]"></a>PORT0_0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>PORT0_10_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_10_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PORT0_11_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_11_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PORT0_12_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_12_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>PORT0_13_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_13_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>PORT0_14_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_14_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>PORT0_15_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_15_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>PORT0_1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PORT0_2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_2_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PORT0_3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_3_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>PORT0_4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_4_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PORT0_5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_5_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>PORT0_6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_6_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>PORT0_7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_7_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>PORT0_8_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_8_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PORT0_9_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PORT0_9_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RTC_Handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gw1ns4c_it.o(i.RTC_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_Handler &rArr; Count_RealTime
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_RealTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>Set_Load_Value</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gw1ns4c_rtc.o(i.Set_Load_Value))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_RealTime
</UL>

<P><STRONG><a name="[64]"></a>Set_RealTime</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gw1ns4c_rtc.o(i.Set_RealTime))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gw1ns4c_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SysTick_Handler &rArr; Count_RealTime
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Count_RealTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SystemInit</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, system_gw1ns4c.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SystemInit &rArr; I2C_Init &rArr; I2C_Rate_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(.text)
</UL>
<P><STRONG><a name="[63]"></a>SystickInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, systick.o(i.SystickInit))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12]"></a>TIMER0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.TIMER0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIMER1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.TIMER1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>UART0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.UART0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>UART1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.UART1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>UART_Init</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, gw1ns4c_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[60]"></a>UART_ReceiveChar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gw1ns4c_uart.o(i.UART_ReceiveChar))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[61]"></a>UART_SendChar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gw1ns4c_uart.o(i.UART_SendChar))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[b]"></a>USER_INT0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.USER_INT0_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>USER_INT1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.USER_INT1_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>USER_INT2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.USER_INT2_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>USER_INT3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.USER_INT3_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>USER_INT4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.USER_INT4_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>USER_INT5_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.USER_INT5_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gw1ns4c_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gw1ns4c.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>Write_IIC_Command</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, oled.o(i.Write_IIC_Command))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Write_IIC_Command &rArr; I2C_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>

<P><STRONG><a name="[53]"></a>Write_IIC_Data</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, oled.o(i.Write_IIC_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Write_IIC_Data &rArr; I2C_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WR_Byte
</UL>

<P><STRONG><a name="[5a]"></a>__0printf$6</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf6.o(i.__0printf$6), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[75]"></a>__1printf$6</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0printf$6), UNUSED)

<P><STRONG><a name="[62]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0printf$6))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>__0sprintf$6</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[76]"></a>__1sprintf$6</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6), UNUSED)

<P><STRONG><a name="[48]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Clock
</UL>

<P><STRONG><a name="[77]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[78]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[79]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[2c]"></a>fgetc</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, retarget.o(i.fgetc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fgetc
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char_file.o(.text)
</UL>
<P><STRONG><a name="[30]"></a>fputc</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, retarget.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendChar
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf6.o(i.__0printf$6)
</UL>
<P><STRONG><a name="[29]"></a>main</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = main &rArr; __0scanf &rArr; __vfscanf_char_file &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_RealTime
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0scanf
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystickInit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteFrame
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ClearGRAM
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Clock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[65]"></a>puts</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, puts.o(i.puts))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = puts &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5b]"></a>_printf_core</STRONG> (Thumb, 748 bytes, Stack size 96 bytes, printf6.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$6
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$6
</UL>

<P><STRONG><a name="[5f]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf6.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5d]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf6.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[31]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf6.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$6
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf6.o(i.__0sprintf$6)
</UL>
<P><STRONG><a name="[2e]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
